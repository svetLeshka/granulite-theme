@import "variables";
@import "functions";

@mixin media-up($name, $breakpoints: $grid-breakpoints) {
    $min: breakpoint-min($name, $breakpoints);

    @if $min {
        @media (min-width: $min) {
            @content;
        }
    }

    @else {
        @content;
    }
}

@mixin media-down($name, $breakpoints: $grid-breakpoints) {
    $max: breakpoint-max($name, $breakpoints);

    @if $max {
        @media (max-width: $max) {
            @content;
        }
    }

    @else {
        @content;
    }
}

@mixin media-between($lower, $upper, $breakpoints: $grid-breakpoints) {
    $min: breakpoint-min($lower, $breakpoints);
    $max: breakpoint-max($upper, $breakpoints);

    @media (min-width: $min) and (max-width: $max) {
        @content;
    }
}

@mixin media-only($name, $breakpoints: $grid-breakpoints) {
    $min: breakpoint-min($name, $breakpoints);
    $max: breakpoint-max($name, $breakpoints);

    @if $min !=null and $max !=null {
        @media (min-width: $min) and (max-width: $max) {
            @content;
        }
    }

    @else if $max==null {
        @include media-up($name)
    }

    @else if $min==null {
        @include media-down($name)
    }
}

@mixin adaptive-property($property, $minSize, $maxSize, $minRes: 320, $maxRes: $containerWidth) {
	$minSizePx: #{$minSize + 'px'};
	$minResPx: #{$minRes + 'px'};
	#{$property}: calc(#{$minSizePx} + #{$maxSize - $minSize} * ((100vw - #{$minResPx}) / #{$maxRes - $minRes}));
    @if $maxRes <= $containerWidth {
        @media (min-width: #{$containerWidth + 'px'}) {
            #{$property}: #{$maxSize + 'px'};
        }
    } @else {
        @media (min-width: #{$maxRes + 'px'}) {
            #{$property}: #{$maxSize + 'px'};
        }
    }
}